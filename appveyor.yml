image:
- Visual Studio 2017
platform:
- x86
- x64

environment:
  matrix:
    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    - PYTHON_PATH: "C:\\Python27"
      platform: x86
      PYTHON_MAJOR: 2
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_PATH: "C:\\Python27-x64"
      platform: x64
      PYTHON_MAJOR: 2
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_PATH: "C:\\Python33"
      platform: x86
      PYTHON_MAJOR: 3
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_PATH: "C:\\Python33-x64"
      platform: x64
      PYTHON_MAJOR: 3
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_PATH: "C:\\Python34"
      platform: x86
      PYTHON_MAJOR: 3
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_PATH: "C:\\Python34-x64"
      platform: x64
      PYTHON_MAJOR: 3
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_PATH: "C:\\Python35"
      platform: x86
      PYTHON_MAJOR: 3
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - PYTHON_PATH: "C:\\Python35-x64"
      platform: x64
      PYTHON_MAJOR: 3
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - PYTHON_PATH: "C:\\Python36"
      platform: x86
      PYTHON_MAJOR: 3
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - PYTHON_PATH: "C:\\Python36-x64"
      platform: x64
      PYTHON_MAJOR: 3
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

install:
  # Prepare environment
  - "SET PATH=%PYTHON_PATH%;%PYTHON_PATH%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "%PYTHON_PATH%\\python.exe --version"

  # Install setuptools/wheel so that we can e.g. use bdist_wheel
  - pip install setuptools wheel

init:
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" if "%platform%"=="x86" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" x86
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" if "%platform%"=="x64" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" amd64
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2015" if "%platform%"=="x86" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2015" if "%platform%"=="x64" call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
#  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2015" if "%platform%"=="x64" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64

build_script:
  - if "%PYTHON_MAJOR%"=="2" python setup.py build
  - if "%PYTHON_MAJOR%"=="3" python setup3.py build

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  - if "%PYTHON_MAJOR%"=="2" python pywin32_testall.py
  - if "%PYTHON_MAJOR%"=="3" python %PYTHON_PATH%\Tools\scripts\2to3.py pywin32_testall.py

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - if "%PYTHON_MAJOR%"=="2" python setup.py bdist_wheel
  - if "%PYTHON_MAJOR%"=="3" python setup3.py bdist_wheel

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
